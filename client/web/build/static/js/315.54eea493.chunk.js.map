{"version":3,"file":"static/js/315.54eea493.chunk.js","mappings":"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","sources":["../node_modules/pixi-live2d-display/dist/index.es.js"],"sourcesContent":["var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar CubismConfig;\n((CubismConfig2) => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar config;\n((config2) => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter((item) => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n      return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles((file) => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach((texture) => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter((file) => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\n        \"currentPriority\",\n        \"reservePriority\",\n        \"currentGroup\",\n        \"currentIndex\",\n        \"reservedGroup\",\n        \"reservedIndex\",\n        \"reservedIdleGroup\",\n        \"reservedIdleIndex\"\n      ];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach((audio) => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", (e) => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = { x: 0, y: 0, width: 0, height: 0 };\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */ new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */ new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err)\n      return Promise.reject(err);\n    if (i <= index)\n      return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn)\n      return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch((e) => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = (event) => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch((e) => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch((e) => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map((tex) => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, { crossOrigin: context.options.crossOrigin });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then((data) => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch((e) => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then((data) => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch((e) => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [\n  urlToJSON,\n  jsonToSettings,\n  waitUntilReady,\n  setupOptionals,\n  setupEssentials,\n  createInternalModel\n];\nLive2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {\n}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function(url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n      internalModel.once(\"destroy\", function() {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {\n  }\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2D) {\n  throw new Error(\"Could not find Cubism 2 runtime. This plugin requires live2d.min.js to be loaded.\");\n}\nconst originalUpdateParam = Live2DMotion.prototype.updateParam;\nLive2DMotion.prototype.updateParam = function(model, entry) {\n  originalUpdateParam.call(this, model, entry);\n  if (entry.isFinished() && this.onFinishHandler) {\n    this.onFinishHandler(this);\n    delete this.onFinishHandler;\n  }\n};\nclass Live2DExpression extends AMotion {\n  constructor(json) {\n    super();\n    this.params = [];\n    this.setFadeIn(json.fade_in > 0 ? json.fade_in : config.expressionFadingDuration);\n    this.setFadeOut(json.fade_out > 0 ? json.fade_out : config.expressionFadingDuration);\n    if (Array.isArray(json.params)) {\n      json.params.forEach((param) => {\n        const calc = param.calc || \"add\";\n        if (calc === \"add\") {\n          const defaultValue = param.def || 0;\n          param.val -= defaultValue;\n        } else if (calc === \"mult\") {\n          const defaultValue = param.def || 1;\n          param.val /= defaultValue;\n        }\n        this.params.push({\n          calc,\n          val: param.val,\n          id: param.id\n        });\n      });\n    }\n  }\n  updateParamExe(model, time, weight, motionQueueEnt) {\n    this.params.forEach((param) => {\n      model.setParamFloat(param.id, param.val * weight);\n    });\n  }\n}\nclass Cubism2ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new MotionQueueManager();\n    this.definitions = (_a = this.settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.file;\n  }\n  createExpression(data, definition) {\n    return new Live2DExpression(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion);\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, dt) {\n    return this.queueManager.updateParam(model);\n  }\n}\nclass Cubism2MotionManager extends MotionManager {\n  constructor(settings, options) {\n    super(settings, options);\n    this.groups = { idle: \"idle\" };\n    this.motionDataType = \"arraybuffer\";\n    this.queueManager = new MotionQueueManager();\n    this.definitions = this.settings.motions;\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n    }\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  createMotion(data, group, definition) {\n    const motion = Live2DMotion.loadMotion(data);\n    const defaultFadingDuration = group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration;\n    motion.setFadeIn(definition.fade_in > 0 ? definition.fade_in : defaultFadingDuration);\n    motion.setFadeOut(definition.fade_out > 0 ? definition.fade_out : defaultFadingDuration);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.file;\n  }\n  getMotionName(definition) {\n    return definition.file;\n  }\n  getSoundFile(definition) {\n    return definition.sound;\n  }\n  _startMotion(motion, onFinish) {\n    motion.onFinishHandler = onFinish;\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion);\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.updateParam(model);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager = void 0;\n  }\n}\nclass Live2DEyeBlink {\n  constructor(coreModel) {\n    this.coreModel = coreModel;\n    this.blinkInterval = 4e3;\n    this.closingDuration = 100;\n    this.closedDuration = 50;\n    this.openingDuration = 150;\n    this.eyeState = 0;\n    this.eyeParamValue = 1;\n    this.closedTimer = 0;\n    this.nextBlinkTimeLeft = this.blinkInterval;\n    this.leftParam = coreModel.getParamIndex(\"PARAM_EYE_L_OPEN\");\n    this.rightParam = coreModel.getParamIndex(\"PARAM_EYE_R_OPEN\");\n  }\n  setEyeParams(value) {\n    this.eyeParamValue = clamp(value, 0, 1);\n    this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n    this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n  }\n  update(dt) {\n    switch (this.eyeState) {\n      case 0:\n        this.nextBlinkTimeLeft -= dt;\n        if (this.nextBlinkTimeLeft < 0) {\n          this.eyeState = 1;\n          this.nextBlinkTimeLeft = this.blinkInterval + this.closingDuration + this.closedDuration + this.openingDuration + rand(0, 2e3);\n        }\n        break;\n      case 1:\n        this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n        if (this.eyeParamValue <= 0) {\n          this.eyeState = 2;\n          this.closedTimer = 0;\n        }\n        break;\n      case 2:\n        this.closedTimer += dt;\n        if (this.closedTimer >= this.closedDuration) {\n          this.eyeState = 3;\n        }\n        break;\n      case 3:\n        this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n        if (this.eyeParamValue >= 1) {\n          this.eyeState = 0;\n        }\n    }\n  }\n}\nconst tempMatrixArray = new Float32Array([\n  1,\n  0,\n  0,\n  0,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  1\n]);\nclass Cubism2InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.textureFlipY = true;\n    this.drawDataCount = 0;\n    this.disableCulling = false;\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism2MotionManager(settings, options);\n    this.eyeBlink = new Live2DEyeBlink(coreModel);\n    this.eyeballXParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_X\");\n    this.eyeballYParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_Y\");\n    this.angleXParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_X\");\n    this.angleYParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Y\");\n    this.angleZParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Z\");\n    this.bodyAngleXParamIndex = coreModel.getParamIndex(\"PARAM_BODY_ANGLE_X\");\n    this.breathParamIndex = coreModel.getParamIndex(\"PARAM_BREATH\");\n    this.init();\n  }\n  init() {\n    super.init();\n    if (this.settings.initParams) {\n      this.settings.initParams.forEach(({ id, value }) => this.coreModel.setParamFloat(id, value));\n    }\n    if (this.settings.initOpacities) {\n      this.settings.initOpacities.forEach(({ id, value }) => this.coreModel.setPartsOpacity(id, value));\n    }\n    this.coreModel.saveParam();\n    const arr = this.coreModel.getModelContext()._$aS;\n    if (arr == null ? void 0 : arr.length) {\n      this.drawDataCount = arr.length;\n    }\n    let culling = this.coreModel.drawParamWebGL.culling;\n    Object.defineProperty(this.coreModel.drawParamWebGL, \"culling\", {\n      set: (v) => culling = v,\n      get: () => this.disableCulling ? false : culling\n    });\n    const clipManager = this.coreModel.getModelContext().clipManager;\n    const originalSetupClip = clipManager.setupClip;\n    clipManager.setupClip = (modelContext, drawParam) => {\n      originalSetupClip.call(clipManager, modelContext, drawParam);\n      drawParam.gl.viewport(...this.viewport);\n    };\n  }\n  getSize() {\n    return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        let commonKey = key;\n        if (key === \"center_x\") {\n          commonKey = \"centerX\";\n        } else if (key === \"center_y\") {\n          commonKey = \"centerY\";\n        }\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  updateWebGLContext(gl, glContextID) {\n    const drawParamWebGL = this.coreModel.drawParamWebGL;\n    drawParamWebGL.firstDraw = true;\n    drawParamWebGL.setGL(gl);\n    drawParamWebGL.glno = glContextID;\n    for (const prop in drawParamWebGL) {\n      if (drawParamWebGL.hasOwnProperty(prop) && drawParamWebGL[prop] instanceof WebGLBuffer) {\n        drawParamWebGL[prop] = null;\n      }\n    }\n    const clipManager = this.coreModel.getModelContext().clipManager;\n    clipManager.curFrameNo = glContextID;\n    const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n    clipManager.getMaskRenderTexture();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  }\n  bindTexture(index, texture) {\n    this.coreModel.setTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a;\n    return ((_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.id,\n      name: hitArea.name,\n      index: this.coreModel.getDrawDataIndex(hitArea.id)\n    }))) || [];\n  }\n  getDrawableIDs() {\n    const modelContext = this.coreModel.getModelContext();\n    const ids = [];\n    for (let i = 0; i < this.drawDataCount; i++) {\n      const drawData = modelContext.getDrawData(i);\n      if (drawData) {\n        ids.push(drawData.getDrawDataID().id);\n      }\n    }\n    return ids;\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawDataIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    return this.coreModel.getTransformedPoints(drawIndex).slice();\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParam();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.update(dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt, now);\n    (_c = this.physics) == null ? void 0 : _c.update(now);\n    (_d = this.pose) == null ? void 0 : _d.update(dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParam();\n  }\n  updateFocus() {\n    this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n    this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n    this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n    this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n    this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    const t = now / 1e3 * 2 * Math.PI;\n    this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n    this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n    this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n  }\n  draw(gl) {\n    const disableCulling = this.disableCulling;\n    if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n      this.disableCulling = true;\n    }\n    const matrix = this.drawingMatrix;\n    tempMatrixArray[0] = matrix.a;\n    tempMatrixArray[1] = matrix.b;\n    tempMatrixArray[4] = matrix.c;\n    tempMatrixArray[5] = matrix.d;\n    tempMatrixArray[12] = matrix.tx;\n    tempMatrixArray[13] = matrix.ty;\n    this.coreModel.setMatrix(tempMatrixArray);\n    this.coreModel.draw();\n    this.disableCulling = disableCulling;\n  }\n  destroy() {\n    super.destroy();\n    this.coreModel = void 0;\n  }\n}\nclass Cubism2ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    this.motions = {};\n    if (!Cubism2ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    this.moc = json.model;\n    copyArray(\"string\", json, this, \"textures\", \"textures\");\n    this.copy(json);\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!json && typeof json.model === \"string\" && ((_a = json.textures) == null ? void 0 : _a.length) > 0 && json.textures.every((item) => typeof item === \"string\");\n  }\n  copy(json) {\n    copyProperty(\"string\", json, this, \"name\", \"name\");\n    copyProperty(\"string\", json, this, \"pose\", \"pose\");\n    copyProperty(\"string\", json, this, \"physics\", \"physics\");\n    copyProperty(\"object\", json, this, \"layout\", \"layout\");\n    copyProperty(\"object\", json, this, \"motions\", \"motions\");\n    copyArray(\"object\", json, this, \"hit_areas\", \"hitAreas\");\n    copyArray(\"object\", json, this, \"expressions\", \"expressions\");\n    copyArray(\"object\", json, this, \"init_params\", \"initParams\");\n    copyArray(\"object\", json, this, \"init_opacities\", \"initOpacities\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    for (const [group, motions] of Object.entries(this.motions)) {\n      for (let i = 0; i < motions.length; i++) {\n        motions[i].file = replace(motions[i].file, `motions.${group}[${i}].file`);\n        if (motions[i].sound !== void 0) {\n          motions[i].sound = replace(motions[i].sound, `motions.${group}[${i}].sound`);\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].file = replace(this.expressions[i].file, `expressions[${i}].file`);\n      }\n    }\n  }\n}\nconst SRC_TYPE_MAP = {\n  x: PhysicsHair.Src.SRC_TO_X,\n  y: PhysicsHair.Src.SRC_TO_Y,\n  angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n};\nconst TARGET_TYPE_MAP = {\n  x: PhysicsHair.Src.SRC_TO_X,\n  y: PhysicsHair.Src.SRC_TO_Y,\n  angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n};\nclass Live2DPhysics {\n  constructor(coreModel, json) {\n    this.coreModel = coreModel;\n    this.physicsHairs = [];\n    if (json.physics_hair) {\n      this.physicsHairs = json.physics_hair.map((definition) => {\n        const physicsHair = new PhysicsHair();\n        physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n        definition.src.forEach(({ id, ptype, scale, weight }) => {\n          const type = SRC_TYPE_MAP[ptype];\n          if (type) {\n            physicsHair.addSrcParam(type, id, scale, weight);\n          }\n        });\n        definition.targets.forEach(({ id, ptype, scale, weight }) => {\n          const type = TARGET_TYPE_MAP[ptype];\n          if (type) {\n            physicsHair.addTargetParam(type, id, scale, weight);\n          }\n        });\n        return physicsHair;\n      });\n    }\n  }\n  update(elapsed) {\n    this.physicsHairs.forEach((physicsHair) => physicsHair.update(this.coreModel, elapsed));\n  }\n}\nclass Live2DPartsParam {\n  constructor(id) {\n    this.id = id;\n    this.paramIndex = -1;\n    this.partsIndex = -1;\n    this.link = [];\n  }\n  initIndex(model) {\n    this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\n    this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n    model.setParamFloat(this.paramIndex, 1);\n  }\n}\nclass Live2DPose {\n  constructor(coreModel, json) {\n    this.coreModel = coreModel;\n    this.opacityAnimDuration = 500;\n    this.partsGroups = [];\n    if (json.parts_visible) {\n      this.partsGroups = json.parts_visible.map(({ group }) => group.map(({ id, link }) => {\n        const parts = new Live2DPartsParam(id);\n        if (link) {\n          parts.link = link.map((l) => new Live2DPartsParam(l));\n        }\n        return parts;\n      }));\n      this.init();\n    }\n  }\n  init() {\n    this.partsGroups.forEach((group) => {\n      group.forEach((parts) => {\n        parts.initIndex(this.coreModel);\n        if (parts.paramIndex >= 0) {\n          const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n          this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n          this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n          if (parts.link.length > 0) {\n            parts.link.forEach((p) => p.initIndex(this.coreModel));\n          }\n        }\n      });\n    });\n  }\n  normalizePartsOpacityGroup(partsGroup, dt) {\n    const model = this.coreModel;\n    const phi = 0.5;\n    const maxBackOpacity = 0.15;\n    let visibleOpacity = 1;\n    let visibleIndex = partsGroup.findIndex(({ paramIndex, partsIndex }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0);\n    if (visibleIndex >= 0) {\n      const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex].partsIndex);\n      visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n    } else {\n      visibleIndex = 0;\n      visibleOpacity = 1;\n    }\n    partsGroup.forEach(({ partsIndex }, index) => {\n      if (partsIndex >= 0) {\n        if (visibleIndex == index) {\n          model.setPartsOpacity(partsIndex, visibleOpacity);\n        } else {\n          let opacity = model.getPartsOpacity(partsIndex);\n          let a1;\n          if (visibleOpacity < phi) {\n            a1 = visibleOpacity * (phi - 1) / phi + 1;\n          } else {\n            a1 = (1 - visibleOpacity) * phi / (1 - phi);\n          }\n          let backOp = (1 - a1) * (1 - visibleOpacity);\n          if (backOp > maxBackOpacity) {\n            a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n          }\n          if (opacity > a1) {\n            opacity = a1;\n          }\n          model.setPartsOpacity(partsIndex, opacity);\n        }\n      }\n    });\n  }\n  copyOpacity(partsGroup) {\n    const model = this.coreModel;\n    partsGroup.forEach(({ partsIndex, link }) => {\n      if (partsIndex >= 0 && link) {\n        const opacity = model.getPartsOpacity(partsIndex);\n        link.forEach(({ partsIndex: partsIndex2 }) => {\n          if (partsIndex2 >= 0) {\n            model.setPartsOpacity(partsIndex2, opacity);\n          }\n        });\n      }\n    });\n  }\n  update(dt) {\n    this.partsGroups.forEach((partGroup) => {\n      this.normalizePartsOpacityGroup(partGroup, dt);\n      this.copyOpacity(partGroup);\n    });\n  }\n}\nLive2DFactory.registerRuntime({\n  version: 2,\n  test(source) {\n    return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n  },\n  ready() {\n    return Promise.resolve();\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 3) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 3);\n    return String.fromCharCode(...view) === \"moc\";\n  },\n  createModelSettings(json) {\n    return new Cubism2ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const model = Live2DModelWebGL.loadModel(data);\n    const error = Live2D.getError();\n    if (error)\n      throw error;\n    return model;\n  },\n  createInternalModel(coreModel, settings, options) {\n    return new Cubism2InternalModel(coreModel, settings, options);\n  },\n  createPose(coreModel, data) {\n    return new Live2DPose(coreModel, data);\n  },\n  createPhysics(coreModel, data) {\n    return new Live2DPhysics(coreModel, data);\n  }\n});\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {\n  }\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      x,\n      y,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([\n      x,\n      0,\n      0,\n      0,\n      0,\n      y,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null)\n      return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {\n  }\n}\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {\n};\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint)\n      return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0)\n        this.print(logLevel, \"\\n\");\n      else if (i % 8 == 0 && i > 0)\n        this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {\n  }\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nvar CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n            } else {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n            }\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n            totalPointCount += 3;\n            segmentPosition += 7;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = { idle: \"Idle\" };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBreath = \"ParamBreath\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */ ((EyeState2) => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0)\n        ;\n      else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([\n      new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n      new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n      new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n      new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n      new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n    ]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map((link) => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map((link) => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1) {\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n    this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n  }\n  setParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = { angle: 0 };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength = maxNormValue - middleNormValue;\n      const pLength = maxValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case -1: {\n      const nLength = minNormValue - middleNormValue;\n      const pLength = minValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n      break;\n    }\n  }\n  return isInverted ? result : result * -1;\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {\n      }\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { Cubism2ExpressionManager, Cubism2InternalModel, Cubism2ModelSettings, Cubism2MotionManager, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, ExpressionManager, FileLoader, FocusController, InteractionMixin, InternalModel, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DExpression, Live2DEyeBlink, Live2DFactory, Live2DLoader, Live2DModel, Live2DPhysics, Live2DPose, Live2DTransform, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, cubism4Ready, folderName, logger, rand, remove, startUpCubism4 };\n"],"names":["CubismConfig","CubismConfig2","config","config2","__pow","Math","pow","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","x","done","then","apply","supportMoreMaskDivisions","setOpacityFromMotion","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","logLevel","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","preserveExpressionOnMotion","cubism4","logger","tag","_console","_len","arguments","length","messages","Array","_key","console","log","concat","_console2","_len2","_key2","warn","clamp","num","lower","upper","copyProperty","type","from","to","fromKey","toKey","copyArray","array","isArray","filter","item","applyMixins","derivedCtor","baseCtors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","defineProperty","getOwnPropertyDescriptor","ExpressionManager","_EventEmitter","_inherits","_super","_createSuper","settings","options","_this","_classCallCheck","call","expressions","reserveExpressionIndex","destroyed","_createClass","key","this","defaultExpression","createExpression","currentExpression","stopAllExpressions","index","_regeneratorRuntime","mark","_callee","expression","wrap","_context","prev","definitions","abrupt","_loadExpression","sent","stop","Error","_callee2","availableIndices","i","_context2","push","floor","random","setExpression","_setExpression","_callee3","_context3","getExpressionIndex","indexOf","loadExpression","model","now","isFinished","updateParameters","emit","EventEmitter","FocusController","targetX","targetY","y","vx","vy","instant","undefined","dt","dx","dy","abs","d","sqrt","maxSpeed","ax","ay","a","maxA","v","maxV","ModelSettings","json","url2","url","TypeError","lastSlashIndex","lastIndexOf","slice","folderName","path","replacer","moc","pose","physics","textures","files","replaceFiles","file","_this2","assertFileExists","expectedFile","shouldThrow","actualPath","resolveURL","includes","_toConsumableArray","texture","getDefinedFiles","MotionPriority","MotionPriority2","MotionState","debug","currentPriority","reservePriority","group","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","setReservedIdle","setReserved","motion","setCurrent","requestedGroup","requestedIndex","_this3","map","join","SoundManager","get","_volume","set","_this4","audios","audio","volume","onFinish","onError","_this5","Audio","preload","addEventListener","dispose","error","_a","play","catch","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","splice","remove","MotionPreloadStrategy","MotionPreloadStrategy2","MotionManager","_EventEmitter2","_super2","_this6","motionGroups","state","playing","idleMotionGroup","groups","idle","setupMotions","stopAllMotions","_i","_Object$keys","keys","motionPreload","_step","_iterator","_createForOfIteratorHelper","s","n","loadMotion","err","f","_callee4","_context4","_loadMotion","_0","_1","_this7","NORMAL","_callee5","definition","soundURL","readyToPlay","_context5","reserve","currentAudio","getSoundFile","add","src","start","getMotionName","shouldOverrideExpression","expressionManager","resetExpression","_startMotion","_callee6","groupDefs","_context6","isActive","startMotion","_stopAllMotions","reset","restoreExpression","complete","shouldRequestIdleMotion","startRandomMotion","IDLE","destroy","tempBounds","width","height","InternalModel","_EventEmitter3","_super3","_this8","focusController","originalWidth","originalHeight","localTransform","Matrix","drawingMatrix","hitAreas","textureFlipY","viewport","setupLayout","setupHitAreas","self","size","getSize","layout","assign","getLayout","scale","offsetX","centerX","left","right","offsetY","centerY","top","bottom","translate","_step2","getHitAreaDefs","hitArea","_iterator2","def","_this9","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","getDrawableVertices","min","max","transform","copyFrom","append","update","motionManager","NetworkError","_Error","_super4","message","status","_this10","aborted","_wrapNativeSuper","_XHRLoader","target","onload","onerror","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","Set","listeners","cancelXHRs","once","open","responseType","response","onabort","onloadend","delete","abort","clear","WeakMap","XHRLoader","runMiddlewares","middleware","context","dispatch","fn","bind","err2","loader","createXHR","data","result","send","Live2DLoader","middlewares","createTexture","textureOptions","resourceOptions","crossorigin","crossOrigin","Texture","fromURL","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","source","removeEventListener","load","TAG","urlToJSON","_callee7","_context7","live2dModel","jsonToSettings","_callee8","runtime","_context8","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","_callee9","internalModel","tasks","_context9","createPose","coreModel","createPhysics","all","setupEssentials","_callee10","live2DModel","textureLoadings","_context10","tex","createInternalModel","_callee11","modelData","_context11","isValidMoc","createCoreModel","_Live2DFactory","runtimes","sort","b","version","_step3","_iterator3","test","_callee12","textureLoaded","modelLoaded","readyEventEmitted","_context12","live2DModelMiddlewares","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","_a2","taskGroup2","createMotion","expressionTasksMap","getExpressionFile","tasks2","InteractionMixin","_autoInteract","autoInteract","on","onTap","off","manager","interactionManager","unregisterInteraction","onPointerMove","tap","global","focus","tickerRef","Live2DTransform","_Transform","_super5","Transform","tempPoint","Point","tempMatrix$1","Live2DModel","_Container","_super6","_this11","anchor","ObservablePoint","onAnchorChange","_assertThisInitialized","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","init","autoUpdate","window","PIXI","Ticker","_destroyed","shared","onTickerUpdate","_options","interactive","pivot","id","setRandomExpression","toModelPosition","tx","ty","radian","atan2","cos","sin","hitAreaNames","hitTest","position","clone","_recursivePostUpdateTransform","parent","displayObjectUpdateTransform","_tempDisplayObjectParent","worldTransform","applyInverse","point","getBounds","contains","_bounds","addFrame","deltaMS","renderer","registerInteraction","plugins","interaction","batch","geometry","shader","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","gl","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","bindTexture","touched","textureGC","count","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","updateTransform","draw","_get","_getPrototypeOf","setupLive2DModel","onLoad","tickerClass","Container","_FileLoader","settingsURL","filePath","resolved","filesMap","_callee13","fileMap","_iterator4","_step4","_loop","_context14","definedFile","actualFile","_context13","decodeURI","find","webkitRelativePath","URL","createObjectURL","delegateYield","t1","finish","_objectURL","_callee14","settingsFile","settingsText","settingsJSON","_context15","endsWith","readText","JSON","parse","_callee15","_context16","reader","FileReader","readAsText","FileLoader","factory","_callee16","_context17","File","createSettings","validateFiles","encodeURI","upload","objectURL","revokeObjectURL","_i2","_Object$values","values","resourceObjectURL","unshift","_ZipLoader","_callee17","filePaths","requiredFilePaths","_iterator5","_step5","_context18","getFilePaths","getFiles","_callee18","settingsFilePath","_context19","_callee19","_context20","_callee20","_context21","paths","_callee21","_context22","_callee22","_context23","ZipLoader","ZIP_PROTOCOL","uid","_callee23","sourceURL","zipBlob","_context24","startsWith","zipReader","unzip","releaseReader","Live2D","originalUpdateParam","Live2DMotion","updateParam","entry","onFinishHandler","Live2DExpression","_AMotion","_super7","_this12","params","setFadeIn","fade_in","setFadeOut","fade_out","param","calc","defaultValue","val","time","weight","motionQueueEnt","setParamFloat","AMotion","Cubism2ExpressionManager","_ExpressionManager","_super8","_this13","queueManager","MotionQueueManager","findIndex","Cubism2MotionManager","_MotionManager","_super9","_this14","motions","defaultFadingDuration","Live2DEyeBlink","blinkInterval","closingDuration","closedDuration","openingDuration","eyeState","eyeParamValue","closedTimer","nextBlinkTimeLeft","leftParam","getParamIndex","rightParam","setEyeParams","tempMatrixArray","Float32Array","Cubism2InternalModel","_InternalModel","_super10","_this15","drawDataCount","disableCulling","eyeBlink","eyeballXParamIndex","eyeballYParamIndex","angleXParamIndex","angleYParamIndex","angleZParamIndex","bodyAngleXParamIndex","breathParamIndex","_this16","initParams","_ref","initOpacities","_ref2","setPartsOpacity","saveParam","arr","getModelContext","_$aS","culling","drawParamWebGL","clipManager","originalSetupClip","setupClip","modelContext","drawParam","_drawParam$gl","getCanvasWidth","getCanvasHeight","_i3","_Object$keys2","commonKey","prop","firstDraw","setGL","glno","hasOwnProperty","WebGLBuffer","curFrameNo","getParameter","FRAMEBUFFER_BINDING","getMaskRenderTexture","bindFramebuffer","FRAMEBUFFER","setTexture","_this17","getDrawDataIndex","ids","drawData","getDrawData","getDrawDataID","getTransformedPoints","_b","_c","_d","motionUpdated","updateFocus","updateNaturalMovements","loadParam","addToParamFloat","t","PI","matrix","c","setMatrix","Cubism2ModelSettings","_ModelSettings","_super11","_this18","isValidJSON","copy","replace","_i4","_Object$entries","entries","_Object$entries$_i","_slicedToArray","every","SRC_TYPE_MAP","PhysicsHair","Src","SRC_TO_X","SRC_TO_Y","angle","SRC_TO_G_ANGLE","TARGET_TYPE_MAP","Live2DPhysics","physicsHairs","physics_hair","physicsHair","setup","regist","mass","_ref3","ptype","addSrcParam","targets","_ref4","addTargetParam","elapsed","_this19","Live2DPartsParam","paramIndex","partsIndex","link","getPartsDataIndex","PartsDataID","getID","Live2DPose","opacityAnimDuration","partsGroups","parts_visible","_ref5","_ref6","parts","l","_this20","initIndex","visible","getParamFloat","p","partsGroup","phi","visibleOpacity","visibleIndex","_ref7","originalOpacity","getPartsOpacity","_ref8","a1","opacity","_ref9","_ref10","partsIndex2","_this21","partGroup","normalizePartsOpacityGroup","copyOpacity","registerRuntime","byteLength","view","Int8Array","String","fromCharCode","Live2DModelWebGL","loadModel","getError","Live2DCubismCore","CubismVector2","vector2","ret","scalar","multiply","division","rhs","isEqual","_CubismMath","cx","isNegativeNumber","Infinity","exp","degrees","directionToRadian","degree","radianToDegrees","totalAngle","Epsilon","range","quadraticEquation","ba","ca","p3","q","q2","discriminant","center","threshold","mp3","mp33","r","cosphi","acos","cbrt","root12","root2","root3","u12","sd","root1","CubismMath","CubismMatrix44","_tr","loadIdentity","tr","tr1","m","getArray","cloneMatrix","dst","j","k","CubismRenderer","_isCulling","_isPremultipliedAlpha","_anisortopy","_modelColor","CubismTextureColor","_mvpMatrix4x4","_model","getModel","doDrawModel","matrix44","red","green","blue","alpha","R","G","B","A","enable","CubismBlendMode","CubismBlendMode2","s_isStarted","s_isInitialized","s_option","Constant","CubismFramework","option","CubismLogInfo","_isStarted","Logging","csmSetLogFunction","logFunction","Version","csmGetVersion","minor","patch","versionNumber","CubismLogWarning","staticRelease","csmGetLogFunction","loggingLevel","LogLevel","LogLevel_Off","LogLevel2","CubismLogDebug","fmt","_len4","args","_key4","CubismDebug","print","LogLevel_Debug","_len5","_key5","LogLevel_Info","_len6","_key6","LogLevel_Warning","CubismLogError","_len7","_key7","LogLevel_Error","format","getLoggingLevel","logPrint","coreLogFunction","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","isStarted","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","getEasingSine","getFadeInStartTime","setState","doUpdateParameters","setIsFinished","fadeInSeconds","fadeOutSeconds","offsetSeconds","beforeCheckTimeSeconds","motionTimeSeconds","onFinishedMotionHandler","_onFinishedMotion","CubismExpressionMotion","_ACubismMotion","_super12","_this22","_parameters","parameter","blendType","ExpressionBlendType","ExpressionBlendType_Add","addParameterValueById","parameterId","ExpressionBlendType_Multiply","multiplyParameterValueById","ExpressionBlendType_Overwrite","setParameterValueById","fadeInTime","FadeInTime","fadeOutTime","FadeOutTime","setFadeInTime","setFadeOutTime","parameters","Parameters","Id","Value","Blend","ExpressionBlendType2","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","release","newEndTimeSeconds","startTime","endTime","timeSeconds","checkSeconds","CubismMotionQueueManager","_userTimeSeconds","_eventCustomData","_motions","autoDelete","InvalidMotionQueueEntryHandleValue","getFadeOutTime","motionQueueEntryNumber","callback","customData","_eventCallBack","updated","firedList","getFiredEvent","getLastCheckEventSeconds","i2","setLastCheckEventSeconds","isTriggeredFadeOut","startFadeOut","getFadeOutSeconds","Cubism4ExpressionManager","_ExpressionManager2","_super13","_this23","Name","create","doUpdateMotion","CubismModelSettingsJson","Groups","HitAreas","Layout","FileReferences","Moc","Expressions","Motions","Textures","Physics","Pose","Ids","Cubism4ModelSettings","_ModelSettings2","_super14","_this24","_i7","_Object$entries2","_Object$entries2$_i","Sound","CubismMotionCurveTarget","CubismMotionCurveTarget2","CubismMotionSegmentType","CubismMotionSegmentType2","CubismMotionPoint","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","events","CubismMotionJson","_json","Meta","Duration","Loop","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","AreBeziersRestricted","CurveCount","Fps","TotalSegmentCount","TotalPointCount","curveIndex","Curves","Target","Segments","segmentIndex","UserDataCount","TotalUserDataSize","userDataIndex","UserData","Time","EvaluationOptionFlag2","lerpPoints","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","cardanoAlgorithmForBezier","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_ACubismMotion2","_super15","_this25","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","parameterIndex","tmpFadeIn","tmpFadeOut","_motionData","CubismMotionCurveTarget_Model","CubismMotionCurveTarget_Parameter","getParameterIndex","sourceValue","getParameterValueByIndex","fin","fout","setParameterValueByIndex","getParameterValueById","CubismMotionCurveTarget_PartOpacity","setPartOpacityById","loopFadeIn","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","getMotionDuration","isMotionLoop","getMotionCurveCount","getMotionFps","getEventCount","areBeziersRestructed","getEvaluationOptionFlag","getMotionFadeInTime","getMotionFadeOutTime","getMotionTotalSegmentCount","totalPointCount","getMotionCurveTarget","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","segmentPosition","getMotionCurveSegmentCount","getMotionCurveSegment","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","getEventTime","getEventValue","u","Cubism4MotionManager","_MotionManager2","_super16","_this26","eyeBlinkIds","getEyeBlinkParameters","lipSyncIds","getLipSyncParameters","_this27","setEventCallback","caller","eventValue","setFinishedMotionHandler","setEffectIds","CubismBreath","_breathParameters","_currentTime","breathParameters","deltaTimeSeconds","offset","peak","cycle","BreathParameterData","_CubismEyeBlink","modelSetting","_blinkingState","EyeState","EyeState_First","_nextBlinkingTime","_stateStartTimeSeconds","_blinkingIntervalSeconds","_closingSeconds","_closedSeconds","_openingSeconds","_parameterIds","blinkingInterval","closing","closed","opening","parameterIds","parameterValue","EyeState_Closing","EyeState_Closed","EyeState_Opening","EyeState_Interval","determinNextBlinkingTiming","CloseIfZero","CubismEyeBlink","s_instance","s_viewport","s_fbo","EyeState2","csmRect","w","h","CubismClippingManager_WebGL","_maskRenderTexture","_colorBuffer","_currentFrameNo","_clippingMaskBufferSize","_clippingContextListForMask","_clippingContextListForDraw","_channelColors","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","channelNo","_maskTexture","frameNo","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableIndex","drawableVertexCount","getDrawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","deleteFramebuffer","deleteTexture","drawableCount","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","usingClipCount","clipIndex","cc","calcClippedDrawTotalBounds","getMvpMatrix","preDraw","setupLayoutBounds","clearColor","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","setRect","expand","scaleX","scaleY","translateRelative","scaleRelative","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","getDrawableDynamicFlagVertexPositionsDidChange","setIsCulling","getDrawableCulling","setClippingContextBufferForMask","drawMesh","getDrawableTextureIndices","getDrawableVertexIndexCount","getDrawableVertexIndices","getDrawableVertexUvs","getDrawableOpacity","CubismBlendMode_Normal","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","clippingDrawableIndices","clipCount","_owner","CubismShader_WebGL","_shaderSets","releaseShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","colorBlendMode","baseColor","isPremultipliedAlpha","matrix4x4","invertedMask","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","generateShaders","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","getClippingManager","getChannelFlagAsColor","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","getRight","getBottom","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","ShaderNames_NormalPremultipliedAlpha","ONE","CubismBlendMode_Additive","ShaderNames_AddPremultipliedAlpha","CubismBlendMode_Multiplicative","ShaderNames_MultPremultipliedAlpha","TEXTURE1","getColorBuffer","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","createShader","compileShader","getShaderInfoLog","getShaderParameter","COMPILE_STATUS","ShaderNames2","CubismRenderer_WebGL","_CubismRenderer","_super17","_this28","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","_textures","_sortedDrawableIndexList","_bufferData","isUsingMasking","initialize","getDrawableCount","getDrawableMasks","getDrawableMaskCounts","modelTextureNo","glTexture","setClippingMaskBufferSize","getClippingMaskBufferSize","deleteBuffer","setupClippingContext","renderOrder","getDrawableRenderOrders","order","getDrawableDynamicFlagIsVisible","setClippingContextBufferForDraw","getClippingContextListForDraw","getDrawableBlendMode","getDrawableInvertedMaskBit","textureNo","indexCount","isCulling","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","getModelColor","drawtexture","getInstance","setupShaderProgram","drawElements","TRIANGLES","UNSIGNED_SHORT","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","setGl","deleteInstance","doStaticRelease","startupPromise","tempMatrix","Cubism4InternalModel","_InternalModel2","_super18","_this29","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","setParameters","setIsPremultipliedAlpha","canvasinfo","CanvasWidth","CanvasHeight","_i16","_Object$keys3","charAt","toLowerCase","PixelsPerUnit","startUp","_this30","getDrawableIndex","getDrawableIds","prepend","saveParameters","loadParameters","setMvpMatrix","setRenderState","drawModel","startupRetries","CubismPose","_fadeTimeSeconds","_lastModel","_partGroups","_partGroupCounts","beginIndex","partGroupCount","doFade","copyPartOpacities","groupCount","partIndex","setPartOpacityByIndex","groupIndex","partData","getPartOpacityByIndex","linkIndex","linkPartIndex","visiblePartIndex","newOpacity","pose3json","poseListInfo","poseCount","poseIndex","idListInfo","idCount","partInfo","PartData","partId","linkListInfo","Link","linkCount","linkPart","assignment","getPartIndex","clonePartData","CubismModel","_savedParameters","_drawableIds","_partIds","_notExistPartId","_notExistParameterId","_notExistParameterValues","_notExistPartOpacities","drawables","resetDynamicFlags","parameterCount","savedParameterCount","_parameterValues","partCount","getPartCount","_partOpacities","maximumValues","minimumValues","defaultValues","getParameterCount","addParameterValueByIndex","multiplyParameterValueByIndex","drawableId","renderOrders","textureIndices","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","indexCounts","vertexCounts","getDrawableVertexPositions","indices","vertexPositions","vertexUvs","opacities","constantFlags","hasIsDoubleSidedBit","hasBlendAdditiveBit","hasBlendMultiplicativeBit","hasIsInvertedMaskBit","masks","maskCounts","hasIsVisibleBit","hasVisibilityDidChangeBit","hasOpacityDidChangeBit","hasRenderOrderDidChangeBit","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","CubismMoc","_moc","_modelCount","cubismModel","Model","fromMoc","_release","mocBytes","fromArrayBuffer","CubismPhysicsTargetType","CubismPhysicsTargetType2","CubismPhysicsSource","CubismPhysicsSource2","CubismPhysicsParticle","initialPosition","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","destination","translationScale","CubismPhysicsRig","inputs","outputs","particles","gravity","wind","CubismPhysicsJson","EffectiveForces","Gravity","X","Y","Wind","PhysicsSettingCount","TotalInputCount","TotalOutputCount","VertexCount","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","Maximum","Default","Angle","Input","inputIndex","Weight","Reflect","Type","Source","Output","outputIndex","VertexIndex","Scale","Destination","Vertices","vertexIndex","Mobility","Delay","Acceleration","Radius","PhysicsTypeTagAngle","CubismPhysics","Options","radAngle","outputValue","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","totalTranslation","settingIndex","_physicsRig","subRigCount","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","degreesToRadian","updateParticles","particleCount","maximum","outputCount","particleIndex","destinationParameterIndex","translation","getValue","outParameterValue","stringify","subarray","updateOutputParameterValue","outParamIndex","physicsJson","getGravity","getWind","getSubRigCount","setting","minimum","getNormalizationPositionMinimumValue","getNormalizationPositionMaximumValue","defalut","getNormalizationPositionDefaultValue","getNormalizationAngleMinimumValue","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","input","getInputWeight","getInputReflect","getInputType","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","getInputSourceId","getOutputCount","output","getOutputVertexIndex","angleScale","getOutputAngleScale","getOutputWeight","getOutputDestinationId","getOutputType","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","getOutputReflect","getParticleCount","particle","mobility","getParticleMobility","delay","getParticleDelay","acceleration","getParticleAcceleration","radius","getParticleRadius","getParticlePosition","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","substract","multiplyByScaler","getDefaultValue","getRangeValue","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","radianToDirection","normalize","divisionByScalar","parameterValueMinimum","parameterValueMaximum","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minValue","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","sign","pLength","releaseMoc","__moc","startUpWithRetry","LogLevel_Verbose","cause","setTimeout","createModel","ignored","coreModelWithMoc"],"sourceRoot":""}